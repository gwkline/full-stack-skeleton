name: Frontend CI/CD

on:
  push:
    paths:
      - "frontend/**"
    branches:
      - main
  pull_request:
    paths:
      - "frontend/**"

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cache npm modules
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build frontend for testing
        run: |
          docker build -f ./frontend/Dockerfile.test -t frontend-tester ./frontend

      - name: Start frontend for testing
        run: |
          docker run -d --name frontend-tester frontend-tester

      # If you have any frontend tests, run them here.

      - name: Cleanup
        run: |
          docker stop frontend-tester
          docker rm frontend-tester

  analyze:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cache npm modules (for Docker build)
      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build frontend for production
        run: |
          docker build -f ./frontend/Dockerfile.prod -t frontend ./frontend

      - name: Deploy to Docker Hub
        run: |
          docker tag frontend:latest gwkline/full-stack-skeleton:frontend-latest
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push gwkline/full-stack-skeleton:frontend-latest
