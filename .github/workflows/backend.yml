name: Backend CI/CD

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          cache-dependency-path: "backend/go.sum"
          go-version-file: "backend/go.mod"
      - name: Install dependencies
        working-directory: ./backend
        run: go get .
      - name: Test with the Go CLI
        working-directory: ./backend
        run: go test ./... -coverprofile=coverage.out
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: ./backend/coverage.out

  analyze:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: go

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build backend
        run: |
          docker build -f ./backend/Dockerfile.prod -t backend ./backend
      - name: Tag and Push to Docker Hub
        run: |
          docker tag backend:latest gwkline/full-stack-skeleton:backend-latest
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push gwkline/full-stack-skeleton:backend-latest
