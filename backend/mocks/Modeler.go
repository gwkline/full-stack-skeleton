// Code generated by mockery v2.42.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Modeler is an autogenerated mock type for the Modeler type
type Modeler struct {
	mock.Mock
}

type Modeler_Expecter struct {
	mock *mock.Mock
}

func (_m *Modeler) EXPECT() *Modeler_Expecter {
	return &Modeler_Expecter{mock: &_m.Mock}
}

// GetID provides a mock function with given fields:
func (_m *Modeler) GetID() uint {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetID")
	}

	var r0 uint
	if rf, ok := ret.Get(0).(func() uint); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint)
	}

	return r0
}

// Modeler_GetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetID'
type Modeler_GetID_Call struct {
	*mock.Call
}

// GetID is a helper method to define mock.On call
func (_e *Modeler_Expecter) GetID() *Modeler_GetID_Call {
	return &Modeler_GetID_Call{Call: _e.mock.On("GetID")}
}

func (_c *Modeler_GetID_Call) Run(run func()) *Modeler_GetID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Modeler_GetID_Call) Return(_a0 uint) *Modeler_GetID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Modeler_GetID_Call) RunAndReturn(run func() uint) *Modeler_GetID_Call {
	_c.Call.Return(run)
	return _c
}

// NewModeler creates a new instance of Modeler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewModeler(t interface {
	mock.TestingT
	Cleanup(func())
}) *Modeler {
	mock := &Modeler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
